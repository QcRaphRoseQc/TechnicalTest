// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TechnicalTest.API.Data;

#nullable disable

namespace TechnicalTest.API.Migrations
{
    [DbContext(typeof(EventDbContext))]
    [Migration("20220127141858_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TechnicalTest.API.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeclarationDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DeclaredById")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DeclaredById");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("TechnicalTest.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });



            modelBuilder.Entity("TechnicalTest.API.Models.Event", b =>
                {
                    b.HasOne("TechnicalTest.API.Models.User", "DeclaredBy")
                        .WithMany("Events")
                        .HasForeignKey("DeclaredById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeclaredBy");
                });

            modelBuilder.Entity("TechnicalTest.API.Models.User", b =>
                {
                    b.Navigation("Events");
                });

            //build for documents
            modelBuilder.Entity("TechnicalTest.API.Models.Document", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<string>("Path")
                    .IsRequired()
                    .HasColumnType("text");

                b.Property<int>("EventId")
                    .HasColumnType("integer");

                b.HasKey("Id");

                b.HasIndex("EventId");

                b.ToTable("Documents");
            });


#pragma warning restore 612, 618
        }
    }
}